# Copyright (c) 2017-2021 Trough Creek Holdings, LLC.  All Rights Reserved.

# For use when building multiple services in a monolithic repository
ifdef BUILD_SERVICE
-include ${ROOT}/config/Makefile.${BUILD_SERVICE}.cfg
endif

-include ${ROOT}/config/Makefile.cfg
-include ${ROOT}/mk/Makefile.cfg

.SHELLFLAGS = -ec
.DEFAULT_GOAL := all

.PHONY: all build init clean nuke

# This is not the function definition you are looking for...
func_reverse = $(if $(1),$(call func_reverse,$(wordlist 2,$(words $(1)),$(1)))) $(firstword $(1))

#ifdef_all_of = $(filter-out undefined, $(foreach v, $(1), $(origin $(v))))

RAILS_ENV?=development

ROOT:=$(abspath $(dir $(lastword $(MAKEFILE_LIST)))/..)
REL_ROOT=$(shell ${ROOT}/mk/scripts/realpath --relative-to="$(abspath $(lastword ${MAKEFILE_LIST})/..)" ${ROOT})
REL_CURDIR=$(shell ${ROOT}/mk/scripts/realpath --relative-to="${ROOT}" $(abspath $(lastword ${MAKEFILE_LIST})/..))

export REL_ROOT
export REL_CURDIR

export BUILD_REPO_ROOT=$(abspath ${ROOT})

ifneq ($(filter-out undefined, $(foreach v, ${BUILD_SERVICE} ${ROOT_SERVICE}, $(origin v))),)
export BUILD_ROOT=$(abspath ${ROOT}/${ROOT_SERVICE}/${BUILD_SERVICE})
else
export BUILD_ROOT=${ROOT}
endif

export BUILD_RELROOT=$(shell ${ROOT}/mk/scripts/realpath --relative-to="$(abspath $(lastword ${MAKEFILE_LIST})/..)" ${BUILD_ROOT})

BUILD_DATE:=$(shell TZ=UTC date -Iseconds)
export BUILD_DATE

PYTHON ?= python
PYTHON_PIP ?= pip

AWS_PROFILE?=default
AWS_CMD ?= aws
AWS_CMD := $(if $(AWS_PROFILE), ${AWS_CMD} --profile ${AWS_PROFILE}, ${AWS_CMD})
AWS_CMD := $(if $(AWS_REGION), ${AWS_CMD} --region ${AWS_REGION}, ${AWS_CMD})
GO_VERSION := $(shell ${ROOT}/mk/scripts/cfg-version -q -c ${ROOT}/config/versions.yml golang)

REVISION:=$(shell cat ${ROOT}/REVISION)
DOCKERB_REVISION := ${REVISION}
DOCKERB_PACKAGE_NAME := ${PACKAGE_NAME}

#export PACKAGE_NAME - see Makefile.cfg
export PACKAGE_REVISION=${REVISION}
export PACKAGE_VERSION=$(if ${RELEASE_DATE},"${REVISION}-${RELEASE_DATE}",${REVISION})

define RECURSIVE_template
${1}:
	for d in ${SUBDIR} ; do $${MAKE} -C $$$$d $${@} ; done
endef

ifdef SUBDIR
RECURSIVE_TARGETS_DEFAULT ?= init all depend clean nuke
ifndef RECURSIVE_TARGETS
RECURSIVE_TARGETS := ${RECURSIVE_TARGETS_DEFAULT}
else
RECURSIVE_TARGETS := ${RECURSIVE_TARGETS_DEFAULT} ${RECURSIVE_TARGETS}
endif

RECURSIVE_TARGETS := $(shell echo ${RECURSIVE_TARGETS} | tr ' ' '\n' | sort -u)

$(foreach t, ${RECURSIVE_TARGETS}, $(eval $(call RECURSIVE_template,$t)))
endif

git_no_untracked:
	@git status --untracked-files=no --porcelain || (echo "untracked changes" && git status && git diff && git version && /bin/false)

targets:
	@$(MAKE) -pRrq -f $(firstword $(MAKEFILE_LIST)) : 2>/dev/null | awk -v RS= -F: '/^# File/,/^# Finished Make data base/ {if ($$1 !~ "^[#.]") {print $$1}}' | sort | egrep -v -e '^[^[:alnum:]]' -e '^(src|build)/' -e '^$@$$'
